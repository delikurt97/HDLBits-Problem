module top_module( // Sub module can be mixed in one module with adding control port to sub module.
    input clk,
    input reset,
    input ena,
    output pm,
    output [7:0] hh,
    output [7:0] mm,
    output [7:0] ss); 
    reg [7:0] xx;

    wire ena2, ena3, ena4 ,ena5,ena6, resethh ;
    count_to_9 c1(clk, reset , ena, ss[3:0]);
    count_to_6 c2(clk, reset , ena2, ss[7:4]);
    count_to_9 c3(clk, reset , ena3, mm[3:0]);
    count_to_6 c4(clk, reset , ena4, mm[7:4]);
    count_to_9 c5(clk, resethh , ena5, xx[3:0]);
    count_to_2 c6(clk, resethh , ena6, xx[7:4]);
    
    
    assign ena2 = ((ss[3:0]> 4'b1000 && ena )? 1 : 0);
    assign ena3 = ((ss[7:4]> 4'b0100 && ss[3:0]> 4'b1000 && ena) ? 1 : 0);
    assign ena4 = ((ss[7:4]> 4'b0100 && ss[3:0]> 4'b1000 && mm[3:0]> 4'b1000 && ena)? 1 : 0);
    assign ena5 = ((ss[7:4]> 4'b0100 && ss[3:0]> 4'b1000 && mm[7:4]> 4'b0100 && mm[3:0]> 4'b1000 && ena) ? 1 : 0);
    assign ena6 = ((ss[7:4]> 4'b0100 && ss[3:0]> 4'b1000 && mm[7:4]> 4'b0100 && mm[3:0]> 4'b1000 && xx[3:0]> 4'b1000 && ena) ? 1 : 0);
    assign hh = ( xx== 8'b00000000 ? 8'b00010010: xx);
    assign resethh = xx[7:0]== 8'b00010010 ? 1 :reset;
    always @(posedge clk) begin 
        if ( (ss[7:4]> 4'b0100 && ss[3:0]> 4'b1000 && mm[7:4]> 4'b0100 && mm[3:0]> 4'b1000 && xx[7:0]== 8'b00010001)) begin 
            pm <= ~ pm; 
        end
    end


endmodule 
module count_to_6 (
    input clk,
    input reset,
    input en,
    output [3:0] q);
    always @(posedge clk) begin
        if (en) begin //33
            if (reset ==1) begin//26
        q<= 4'b0000;
        end
        else begin //32
        q<= q+1;
            if (q > 4'b0100) begin//31
            q<= 4'b0000;
            end
        end
        end
    else begin
        if (reset ==1) begin
        q<= 4'b0000;
        
        end
    end
        
        end    
endmodule


module count_to_2 (
    input clk,
    input reset,
    input en,
    output [3:0] q);
    always @(posedge clk) begin
        if (en) begin //33
            if (reset ==1) begin//26
        q<= 4'b0000;
        end
        else begin //32
        q<= q+1;
            if (q > 4'b0001) begin//31
            q<= 4'b0000;
            end
        end
        end
    else begin
        if (reset ==1) begin
        q<= 4'b0000;
        
        end
    end
        
        end    
endmodule


module count_to_9 (
    input clk,
    input reset,
    input en,
    output [3:0] q);
    always @(posedge clk) begin
        if (en) begin //33
            if (reset ==1) begin//26
        q<= 4'b0000;
        end
        else begin //32
        q<= q+1;
            if (q > 4'b1000) begin//31
            q<= 4'b0000;
            end
        end
        end
    else begin
        if (reset ==1) begin
        q<= 4'b0000;
        
        end
    end
        
        end    
endmodule
